# Generated by Django 4.2.23 on 2025-07-28 04:27

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('onboarding_status', models.CharField(choices=[('pending_email_confirmation', 'Pending Email Confirmation'), ('pending_payment', 'Pending Payment'), ('pending_profile_completion', 'Pending Profile Completion'), ('active', 'Active')], default='pending_email_confirmation', help_text='Tracks onboarding progress for the user.', max_length=32)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CityCounty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientPopulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MultilingualMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PracticeAreaTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StateBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('stripe_plan_id_monthly', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('stripe_plan_id_annual', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('price_monthly', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('price_annual', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TelehealthPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentApproach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=64)),
                ('last_name', models.CharField(default='', max_length=64)),
                ('credentials', models.CharField(max_length=128)),
                ('credential_description', models.CharField(blank=True, default='', max_length=256)),
                ('display_name', models.CharField(blank=True, max_length=128)),
                ('tagline', models.CharField(blank=True, max_length=256)),
                ('short_bio', models.TextField()),
                ('license_number', models.CharField(max_length=64)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('license_verified', models.BooleanField(default=False)),
                ('license_upload', models.FileField(blank=True, null=True, upload_to='licenses/')),
                ('primary_office_address', models.CharField(max_length=256)),
                ('city', models.CharField(blank=True, default='', max_length=64)),
                ('state', models.CharField(blank=True, default='', max_length=32)),
                ('additional_locations', models.TextField(blank=True)),
                ('phone_number', models.CharField(max_length=32)),
                ('email_address', models.EmailField(max_length=254)),
                ('website_url', models.URLField(blank=True)),
                ('contact_form_toggle', models.BooleanField(default=True)),
                ('in_person_sessions', models.BooleanField(default=True)),
                ('telehealth', models.BooleanField(default=True)),
                ('office_hours', models.CharField(blank=True, max_length=128)),
                ('external_scheduling_link', models.URLField(blank=True)),
                ('secure_document_upload', models.BooleanField(default=False)),
                ('zip_code', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid 5-digit US ZIP code.', regex='^\\d{5}$')])),
                ('trauma_informed_training', models.BooleanField(default=False)),
                ('neurodiversity_training', models.BooleanField(default=False)),
                ('profile_photo', models.ImageField(upload_to='profile_photos/')),
                ('intro_video_url', models.URLField(blank=True)),
                ('practice_logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('certificate_logos', models.ImageField(blank=True, null=True, upload_to='certificates/')),
                ('degrees_institutions', models.CharField(blank=True, max_length=256)),
                ('graduation_years', models.CharField(blank=True, max_length=32)),
                ('continuing_ed_certifications', models.CharField(blank=True, max_length=256)),
                ('session_fee_package_rates', models.CharField(max_length=128)),
                ('sliding_scale_scholarship', models.BooleanField(default=False)),
                ('sliding_scale_description', models.CharField(blank=True, max_length=256)),
                ('free_consultation_offer', models.BooleanField(default=False)),
                ('cancellation_policy', models.TextField(blank=True)),
                ('wheelchair_access', models.BooleanField(default=False)),
                ('wheelchair_access_description', models.CharField(blank=True, max_length=256)),
                ('client_portal_demo_link', models.URLField(blank=True)),
                ('digital_homework_worksheets', models.FileField(blank=True, null=True, upload_to='homework/')),
                ('publications_books_podcasts', models.CharField(blank=True, max_length=256)),
                ('workshops_group_programs', models.CharField(blank=True, max_length=256)),
                ('pro_bono_community_outreach', models.BooleanField(default=False)),
                ('pro_bono_description', models.CharField(blank=True, max_length=256)),
                ('memberships_awards', models.CharField(blank=True, max_length=256)),
                ('visit_count', models.PositiveIntegerField(default=0)),
                ('contact_count', models.PositiveIntegerField(default=0)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('cities_counties', models.ManyToManyField(blank=True, to='users.citycounty')),
                ('client_populations', models.ManyToManyField(blank=True, to='users.clientpopulation')),
                ('insurances_accepted', models.ManyToManyField(blank=True, to='users.insurance')),
                ('issuing_state_board', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.stateboard')),
                ('languages_spoken', models.ManyToManyField(blank=True, to='users.language')),
                ('license_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.licensetype')),
                ('multilingual_materials', models.ManyToManyField(blank=True, to='users.multilingualmaterial')),
                ('practice_areas_tags', models.ManyToManyField(to='users.practiceareatag')),
                ('professional_associations', models.ManyToManyField(blank=True, to='users.professionalassociation')),
                ('telehealth_platforms', models.ManyToManyField(blank=True, to='users.telehealthplatform')),
                ('treatment_approaches', models.ManyToManyField(blank=True, to='users.treatmentapproach')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.CharField(choices=[('monthly', 'Monthly'), ('annual', 'Annual')], default='monthly', max_length=10)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=128, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=128, null=True)),
                ('stripe_payment_method_id', models.CharField(blank=True, max_length=128, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.subscriptiontype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedTherapistHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('cycle', models.PositiveIntegerField(default=1)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedBlogPostHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('cycle', models.PositiveIntegerField(default=1)),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.blogpost')),
            ],
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=models.ManyToManyField(blank=True, to='users.blogtag'),
        ),
        migrations.CreateModel(
            name='TherapistProfileStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('search_impressions', models.PositiveIntegerField(default=0)),
                ('search_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('profile_clicks', models.PositiveIntegerField(default=0)),
                ('contact_clicks', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('therapist', 'date')},
            },
        ),
    ]
