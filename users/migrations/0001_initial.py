# Generated by Django 4.2.23 on 2025-07-30 22:18

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('onboarding_status', models.CharField(choices=[('pending_email_confirmation', 'Pending Email Confirmation'), ('pending_payment', 'Pending Payment'), ('pending_profile_completion', 'Pending Profile Completion'), ('active', 'Active')], default='pending_email_confirmation', help_text='Tracks onboarding progress for the user.', max_length=32)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faith',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LGBTQIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='OtherIdentity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RaceEthnicity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialtyLookup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('stripe_plan_id_monthly', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('stripe_plan_id_annual', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('price_monthly', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('price_annual', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=64)),
                ('middle_name', models.CharField(blank=True, max_length=64)),
                ('last_name', models.CharField(default='', max_length=64)),
                ('display_title', models.BooleanField(default=False)),
                ('personal_statement_q1', models.TextField(blank=True, max_length=500)),
                ('personal_statement_q2', models.TextField(blank=True, max_length=500)),
                ('personal_statement_q3', models.TextField(blank=True, max_length=500)),
                ('practice_name', models.CharField(blank=True, max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('phone_extension', models.CharField(blank=True, max_length=8)),
                ('receive_calls_from_client', models.BooleanField(default=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20)),
                ('receive_texts_from_clients', models.BooleanField(default=True)),
                ('office_email', models.EmailField(blank=True, max_length=128)),
                ('receive_emails_from_clients', models.BooleanField(default=True)),
                ('receive_emails_when_client_calls', models.BooleanField(default=True)),
                ('intro_statement', models.TextField(blank=True, max_length=500)),
                ('therapy_delivery_method', models.CharField(blank=True, max_length=32)),
                ('accepting_new_clients', models.CharField(default='Yes', max_length=16)),
                ('offers_intro_call', models.BooleanField(default=False)),
                ('individual_session_cost', models.CharField(blank=True, max_length=16)),
                ('couples_session_cost', models.CharField(blank=True, max_length=16)),
                ('sliding_scale_pricing_available', models.BooleanField(default=False)),
                ('finance_note', models.CharField(blank=True, max_length=128)),
                ('credentials_note', models.TextField(blank=True, max_length=500)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('practice_website_url', models.CharField(blank=True, max_length=256)),
                ('facebook_url', models.CharField(blank=True, max_length=256)),
                ('instagram_url', models.CharField(blank=True, max_length=256)),
                ('linkedin_url', models.CharField(blank=True, max_length=256)),
                ('twitter_url', models.CharField(blank=True, max_length=256)),
                ('tiktok_url', models.CharField(blank=True, max_length=256)),
                ('youtube_url', models.CharField(blank=True, max_length=256)),
                ('therapy_types_note', models.TextField(blank=True, max_length=500)),
                ('specialties_note', models.TextField(blank=True, max_length=500)),
                ('mental_health_role', models.CharField(blank=True, max_length=16)),
                ('license_number', models.CharField(blank=True, max_length=32, unique=True)),
                ('license_expiration', models.CharField(blank=True, max_length=7)),
                ('license_state', models.CharField(blank=True, max_length=2)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age_groups', models.ManyToManyField(blank=True, related_name='therapists', to='users.agegroup')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='therapists', to='users.gender')),
                ('license_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='therapists', to='users.licensetype')),
                ('participant_types', models.ManyToManyField(blank=True, related_name='therapists', to='users.participanttype')),
            ],
        ),
        migrations.CreateModel(
            name='TherapyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='video_gallery/')),
                ('caption', models.CharField(blank=True, max_length=128)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_gallery', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TherapyTypeSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types_of_therapy', to='users.therapistprofile')),
                ('therapy_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.therapytype')),
            ],
        ),
        migrations.AddField(
            model_name='therapistprofile',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='therapists', to='users.title'),
        ),
        migrations.AddField(
            model_name='therapistprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.CharField(choices=[('monthly', 'Monthly'), ('annual', 'Annual')], default='monthly', max_length=10)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=128, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=128, null=True)),
                ('stripe_payment_method_id', models.CharField(blank=True, max_length=128, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.subscriptiontype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_top_specialty', models.BooleanField(default=False)),
                ('specialty', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.specialtylookup')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specialties', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RaceEthnicitySelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_ethnicity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.raceethnicity')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='race_ethnicities', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('npi_number', models.CharField(blank=True, max_length=10, unique=True)),
                ('malpractice_carrier', models.CharField(blank=True, max_length=64)),
                ('malpractice_expiration_date', models.CharField(blank=True, max_length=7)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_insurances', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethodSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.paymentmethod')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_payment_methods', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='OtherTreatmentOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=64)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_treatment_options', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='OtherTherapyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('therapy_type', models.CharField(max_length=64)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_therapy_types', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='OtherIdentitySelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.otheridentity')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_identities', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice_name', models.CharField(blank=True, max_length=128)),
                ('street_address', models.CharField(blank=True, max_length=128)),
                ('address_line_2', models.CharField(blank=True, max_length=128)),
                ('city', models.CharField(blank=True, max_length=64)),
                ('state', models.CharField(blank=True, max_length=32)),
                ('zip', models.CharField(blank=True, max_length=16)),
                ('hide_address_from_public', models.BooleanField(default=False)),
                ('is_primary_address', models.BooleanField(default=False)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='LGBTQIASelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lgbtqia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.lgbtqia')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lgbtqia_identities', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_of_network', models.BooleanField(default=False)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_details', to='users.insuranceprovider')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_details', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='gallery/')),
                ('caption', models.CharField(blank=True, max_length=128)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedTherapistHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('cycle', models.PositiveIntegerField(default=1)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedBlogPostHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('cycle', models.PositiveIntegerField(default=1)),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.blogpost')),
            ],
        ),
        migrations.CreateModel(
            name='FaithSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faith', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.faith')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faiths', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=64)),
                ('degree_diploma', models.CharField(max_length=32)),
                ('year_graduated', models.CharField(max_length=4)),
                ('year_began_practice', models.CharField(blank=True, max_length=4)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='users.licensetype')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='users.therapistprofile')),
            ],
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=models.ManyToManyField(blank=True, to='users.blogtag'),
        ),
        migrations.CreateModel(
            name='AreasOfExpertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expertise', models.CharField(max_length=32)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas_of_expertise', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=64)),
                ('id_number', models.CharField(blank=True, max_length=32)),
                ('year_issued', models.CharField(max_length=4)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_credentials', to='users.therapistprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TherapistProfileStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('search_impressions', models.PositiveIntegerField(default=0)),
                ('search_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('profile_clicks', models.PositiveIntegerField(default=0)),
                ('contact_clicks', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('therapist', 'date')},
            },
        ),
    ]
